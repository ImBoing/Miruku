export interface IParseConfig {
    comment?: string;
    delimiter?: string;
    nothrow?: boolean;
    autoTyping?: boolean;
    dataSections?: string[];
}
export interface IStringifyConfig {
    delimiter?: string;
    blankLine?: boolean;
    spaceBefore?: boolean;
    spaceAfter?: boolean;
}
export declare const $Errors: unique symbol;
export declare type IniValue = string | number | boolean | IIniObjectSection | IIniObjectDataSection;
export interface IIniObjectSection {
    [index: string]: IniValue;
}
export declare type IIniObjectDataSection = string[];
export interface IIniObject extends IIniObjectSection {
    [$Errors]?: any;
}
export declare function parse(data: string, params?: IParseConfig): IIniObject;
export declare function stringify(data: IIniObject, params?: IStringifyConfig): string;
export declare const decode: typeof parse;
export declare const encode: typeof stringify;
